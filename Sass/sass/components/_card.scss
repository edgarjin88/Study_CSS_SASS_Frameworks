
.card {

  //functionality
  perspective:40rem; 
  -webkit-perspective: 40rem;
  -moz-perspective: 40rem;
  position:relative;
  height: 52rem;


  &__side {
    background-color:orangered;
    height: 52rem;
    transition: all .8s ease;
    position: absolute;
    // after absolute, the width of elements to be set up as well. 
    top:0;
    left:0;
    width: 100%;
    backface-visibility: hidden;
    border-radius: 3px;
    overflow: hidden;
    // if anything overflowing in the parent container, it will hide to keep the border-radius;
    box-shadow: 0 1.5rem 5rem rgba($color-black, .15);


    &--front{
      background-color:$color-white;
    }

    &--back{

      background-color:green;
      transform: rotateY(180deg);

      &-1{
        background-image: linear-gradient(to right bottom, $color-secondary-light, $color-secondary-dark);
      }

      &-2{
        background-image: linear-gradient(to right bottom, $color-primary-light, $color-primary-dark);
      }

      &-3{
        background-image: linear-gradient(to right bottom, $color-tertiary-light, $color-tertiary-dark);
      }
    }

  }

  &:hover &__side--front {
    // When hover, inside of the hovered side, effect takes place. 
    transform: rotateY(-180deg);
  }

  &:hover &__side--back {
    // When hover, inside of the hovered side, effect takes place. 
    transform: rotateY(0);
  }

  // front side styling
  &__picture{
    background-size: cover;
    height: 23rem;
    background-blend-mode: screen;
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    border-top-left-radius: 3px;
    border-top-right-radius: 3px;
    // for some reason, when use clip-path, overflow not working. 
 

    &--1{
      background-image: linear-gradient(to right bottom, $color-secondary-light, $color-secondary-dark),
      url(../img/nat-5.jpg);

    }
    &--2{
      background-image: linear-gradient(to right bottom, $color-primary-light, $color-primary-dark),
      url(../img/nat-6.jpg);

    }
    &--3{

      background-image: linear-gradient(to right bottom, $color-tertiary-light, $color-tertiary-dark), 
      url(../img/nat-7.jpg);
    }
  }

  &__heading{
    font-size: 2.8rem;
    font-weight: 300;
    text-align: right;
    text-transform: uppercase;
    color: $color-white;
    position: absolute;
    top: 12rem;
    right: 2rem;
    width:75%;
      
  }

  &__heading-span{
    // new element
    padding: 1rem 1.5rem;
    -webkit-box-decoration-break: clone;
    box-decoration-break: clone;
    //to apply pedding to each line of span seperately
    &--1 {
      background-image: linear-gradient(to right bottom, 
      rgba($color-secondary-light, .85), rgba($color-secondary-dark, .85));
    }
    &--2 {
      background-image: linear-gradient(to right bottom, 
      rgba($color-primary-light, .85), rgba($color-primary-dark, .85));
    }
    &--3 {
      background-image: linear-gradient(to right bottom, 
      rgba($color-tertiary-light, .85), rgba($color-tertiary-dark, .85));
    }
  }

  &__details{
    padding: 3rem; 
    ul{
      list-style: none;
      width: 80%;
      margin: 0 auto; 
      li {
        text-align: center;
        font-size: 1.5rem;
        padding: 1rem;
        &:not(:last-child){
          border-bottom: 1px solid $color-grey-light-2;
        }
      }
    }

  }
// cta, price-box, price-only, -price-value can go to front as well. That is why they are direct modifier of card. 
  &__cta {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width:90%;
    text-align: center;
  }

  &__price-box{ 
    text-align: center;
    color: $color-white;
    margin-bottom: 8rem;
  }

  &__price-only{
    font-size: 1.4rem;
    text-transform: uppercase;
  }

  &__price-value{
    font-size: 6rem;
    font-weight: 100;
    // big font looks better in thinner font weight usually. 
  }




  @include respond(tab-port){


    height: auto;
    border-radius: 3px;
    background-color:$color-white;
    box-shadow: 0 1.5rem 5rem rgba($color-black, .15);
    //box shadow is removed from the front, and added to the entire card. 

    &__side {
      height: auto;
      position: relative;
      box-shadow: none; 
      

      &--back{
        transform: rotateY(0);
        clip-path: polygon(0 15%, 100% 0, 100% 100%, 0 100%);

      }
  
    }
  
    &:hover &__side--front {
      // When hover, inside of the hovered side, effect takes place. 
      transform: rotateY(0);
    }
    
    &__detail {
      padding: 1rem 3rem; 
    }
  // cta, price-box, price-only, -price-value can go to front as well. That is why they are direct modifier of card. 
    &__cta {
      position: relative;
      top: 0;
      left: 0;
      transform: translate(0);
      width:100%;
      padding: 7rem 4rem 4rem ; 
    }
  
    &__price-box{ 
      margin-bottom: 8rem;
    }
  
  
    &__price-value{
      font-size: 6rem;
      // big font looks better in thinner font weight usually. 
    }
  
    
  }
}